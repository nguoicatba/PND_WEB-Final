@model PND_WEB.ViewModels.RoleClaimsViewModel



<div class="card">
    <div class="card-header">Cập nhật role : @Model.RoleName</div>
    <div class="card-body">
        <p>
            <button id="save_data" class="btn btn-primary btn-xs">Save Data</button>
        </p>
        <table class="table my-4 w-100 nowrap border" id="kientable">
            <thead class="">
                <tr>
                    <th>Action</th>
                    <th data-priority="1">@Html.DisplayNameFor(model => model.Claims[0].ClaimType)</th>

                    <th>
                        @Html.DisplayNameFor(model => model.Claims[0].ClaimValue)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Claims[0].Description)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Claims)
                {
                    <tr data-claimtype="@item.ClaimType">
                        <td>
                            <input type="checkbox" class="claims_value" @(item.Selected ? "checked" : "") />
                        </td>
                        <td>@item.ClaimType</td>
                        <td>@item.ClaimValue</td>
                        <td>@item.Description</td>
                    </tr>
                }
            </tbody>

        </table>
        <a asp-action="Index" class="btn btn-info btn-xs">Back to List</a>
    </div>
</div>

@section CssFile {
 
    <style>
        .group-header {
            background-color: #f2f2f2;
            font-weight: bold;
        }
    </style>
}

@section Scripts {
  
    <script>



        $(document).ready(function () {
               var table = $('#kientable').DataTable({
            "order": [[1, "asc"]],
            "columnDefs": [
                { "orderable": false, "targets": 0 },
                { "visible": false, "targets": 1 }, // Ẩn cột ClaimType
                { "orderable": false, "targets": 1 },
                { "orderable": false, "targets": 2 },
                { "orderable": false, "targets": 3 }
                
            ],

            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var lastGroup = null;

                api.column(1, { page: 'current' }).data().each(function (group, i) {
                    if (lastGroup !== group) {
                        $(rows).eq(i).before(
                            `<tr class="group-header" data-claimtype="${group}" style="font-weight:bold; background:#f2f2f2">
                                <td>
                                    <input type="checkbox" class="group-checkbox" data-claimtype="${group}" />
                                </td>
                                <td colspan="3">${group}</td>
                            </tr>`
                        );
                        lastGroup = group;
                    }
                });
            }
        });

                // Khi chọn checkbox nhóm -> chọn tất cả các dòng trong nhóm đó
        $('#kientable tbody').on('change', '.group-checkbox', function () {
            var group = $(this).data('claimtype');
            var checked = $(this).is(':checked');

            $('#kientable tbody tr[data-claimtype="' + group + '"] .claims_value').prop('checked', checked);
        });

        // Nếu bỏ chọn 1 checkbox con -> bỏ luôn checkbox nhóm
        $('#kientable tbody').on('change', '.claims_value', function () {
            var row = $(this).closest('tr');
            var group = row.data('claimtype');

            var all = $('#kientable tbody tr[data-claimtype="' + group + '"] .claims_value');
            var checked = all.filter(':checked');

            $('.group-checkbox[data-claimtype="' + group + '"]').prop('checked', all.length === checked.length);
        });

         $('#save_data').click(function () {
            var get_select_data = [];

            // Duyệt từng dòng bằng DataTables
            table.rows().every(function (rowIdx, tableLoop, rowLoop) {
                var rowNode = $(this.node());

                var isChecked = rowNode.find('input[type="checkbox"]').prop('checked');


                var data = this.data();

                var claim = {
                    ClaimId: "",
                    ClaimType: data[1],
                    ClaimValue: data[2],
                    Description: data[3],
                    Selected: isChecked
                };

                get_select_data.push(claim);
            });

            var dataToSend = {
                RoleId: '@Model.RoleId',
                RoleName: '@Model.RoleName',
                Claims: get_select_data
            };

            console.log(dataToSend);

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveRoleClaims", "Role")',
                data: JSON.stringify(dataToSend),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        alert("Data saved successfully!");
                        location.reload(); // Reload the page to see the changes
                    } else {
                        alert("Error saving data.");
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred while saving data.");
                }
            });
        });




         
        });


    </script>
}
