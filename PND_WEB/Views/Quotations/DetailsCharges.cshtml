@using PND_WEB.ViewModels
@model QuotationsEditDeleteDetailController

@{
    ViewData["Title"] = "Details";

    var userRole = User.IsInRole("CEO") || User.IsInRole("SuperAdmin");
    bool isReadOnly = !userRole && Model.Quotation.Qsatus == "Hoàn thành" || Model.Quotation.Qsatus == "Đã hủy";
    var staffNameAttr = isReadOnly
        ? new Dictionary<string, object> { { "class", "form-control" }, { "readonly", "readonly" } }
        : new Dictionary<string, object> { { "class", "form-control" } };

    var groupedTotals = Model.QuotationsCharges
    .GroupBy(c => c.Currency)
    .Select(g => new
    {
        Currency = g.Key,
        Total = g.Sum(c =>
            (c.Quantity.HasValue ? (float)c.Quantity : 0f) *
            (c.Rate.HasValue ? (float)c.Rate : 0f)
        )
    }).ToList();
}
@await Component.InvokeAsync("HeaderBody", new { Title = "Chi tiết thông tin báo giá", SubTitle = "Chi tiết thông tin báo giá" })

<div class="card card-default" id="cardDemo14">
    <div class="card-header bg-success">About Quotation:</div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h5 class="border-bottom" style="background-color: lightgreen;">Basic Info</h5>
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.QuotationId)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.QuotationId)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Qsatus)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Qsatus)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.StaffName)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.StaffName)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Contact)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Contact)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.CusTo)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.CusTo)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.CusContact)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.CusContact)</dd>
                </dl>
            </div>
            <div class="col-md-6">
                <h5 class="border-bottom" style="background-color: lightgreen;">Shipping Details</h5>
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Qdate)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Qdate)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Valid)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Valid)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Term)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Term)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Commodity)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Commodity)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Vol)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Vol)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Pol)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Pol)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Quotation.Pod)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Quotation.Pod)</dd>
                </dl>
            </div>
        </div>
    </div>
</div>

@{
    float totalAmount = 0f;
}
<div class="card card-default" id="cardDemo14">
    <div class="card-header bg-success">About QuotationCharges:</div>
    <div class="card-body">
        @if (!isReadOnly)
        {
            <p>
                <a asp-action="CreateCharges" asp-route-id="@Model.Quotation.QuotationId" class="btn btn-primary btn-xs">Create New</a>
            </p>
        }
        <table class="table table-striped my-4 w-100" id="datatable3">
            <thead class="table-primary">
                <tr>
                    @if (!isReadOnly)
                    {
                        <th></th>
                    }
                    <th>Tên phí</th>
                    <th>Số lượng</th>
                    <th>Đơn vị</th>
                    <th>Giá</th>
                    <th>Tiền tệ</th>
                    <th>Ghi chú</th>
                    <th>Thành tiền</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.QuotationsCharges)
                {
                    float rate = item.Rate.HasValue ? (float)item.Rate.Value : 0f;
                    float quantity = item.Quantity.HasValue ? (float)item.Quantity : 0f;
                    float amount = quantity * rate;
                    totalAmount += amount;
                    <tr>
                        @if (!isReadOnly)
                        {
                            <td>
                                <a asp-action="EditCharges" asp-route-id="@item.ChargeId" class="btn btn-success btn-xs"><i class="fa fa-edit"></i></a>
                                <a asp-action="DeleteCharges" asp-route-id="@item.ChargeId" class="btn btn-danger btn-xs"><i class="fa fa-trash"></i></a>
                            </td>
                        }
                        <td>@item.ChargeName</td>
                        <td>@item.Quantity</td>
                        <td>@item.Unit</td>
                        <td>@item.Rate?.ToString("N0")</td>
                        <td>@item.Currency</td>
                        <td>@item.Notes</td>
                        <td>
                            @if (item.Rate.HasValue)
                            {
                                @(((double)item.Quantity * item.Rate.Value).ToString("N0"))
                                ;
                            }
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                @foreach (var total in groupedTotals)
                {
                    <tr>
                        @if (!isReadOnly)
                        {
                            <td colspan="7" class="text-end"><strong>Tổng cộng (@total.Currency):</strong></td>
                        }
                        else
                        {
                            <td colspan="6" class="text-end"><strong>Tổng cộng (@total.Currency):</strong></td>
                        }
                        <td><strong>@total.Total.ToString("N0")</strong></td>
                    </tr>
                }
            </tfoot>

        </table>
    </div>
</div>

<a asp-controller="Quotations" class="btn btn-info btn-xs" asp-action="Index">Back to List</a>