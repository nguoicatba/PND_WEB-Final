@model PND_WEB.ViewModels.InvoiceDetailsVM

@{
    ViewData["Title"] = "Chi tiết Invoice";
}

@await Component.InvokeAsync("HeaderBody", new { Title = "Chi tiết Invoice", SubTitle = "Thông tin chi tiết invoice" })

<!-- Invoice Details Card -->
<div class="card mb-3">
    <div class="card-header">
        <h5 class="mb-0">Thông tin chi tiết</h5>
    </div>
    <div class="card-body">
        <form id="invoiceForm">
            <input type="hidden" id="Id" name="Id" value="@Model.Invoice.Id" />
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Số Invoice</label>
                        <input type="text" class="form-control" value="@Model.Invoice.InvoiceNo" readonly />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Loại Invoice</label>
                        <input type="text" class="form-control" value="@Model.Invoice.Type" readonly />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Số House</label>
                        <input type="text" class="form-control" value="@Model.Invoice.Hbl" readonly />
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Partner</label>
                        <input type="text" class="form-control" id="Partner" name="Partner" value="@Model.Invoice.Partner" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Currency</label>
                        <input type="text" class="form-control" id="Currency" name="Currency" value="@Model.Invoice.Currency" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Exchange Rate</label>
                        <input type="number" class="form-control" id="ExchangeRate" name="ExchangeRate" value="@Model.Invoice.ExchangeRate" step="0.01" />
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Debit Date</label>
                        <input type="date" class="form-control" id="DebitDate" name="DebitDate" value="@(Model.Invoice.DebitDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Payment Date</label>
                        <input type="date" class="form-control" id="PaymentDate" name="PaymentDate" value="@(Model.Invoice.PaymentDate?.ToString("yyyy-MM-dd"))" />
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-12">
                    <button type="button" class="btn btn-primary" onclick="updateInvoice()">
                        <i class="fa fa-save"></i> Lưu thay đổi
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fa fa-arrow-left"></i> Quay lại
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Charges Table Card -->
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Danh sách phí</h5>
            <button type="button" class="btn btn-success btn-sm" onclick="exportInvoice()">
                <i class="fa fa-file-excel-o"></i> Export Invoice
            </button>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="chargesTable">
                <thead>
                    <tr>
                        <th width="40px">
                            <input type="checkbox" id="checkAll" />
                        </th>
                        <th>Tên phí</th>
                        <th>Đơn vị</th>
                        <th>Số lượng</th>
                        <th>Đơn giá</th>
                        <th>Currency</th>
                        <th>Tỷ giá</th>
                        <th>VAT</th>
                        <th>Tiền VAT</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var charge in Model.Charges)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="charge-checkbox" 
                                       data-charge-id="@charge.Id"
                                @(charge.Checked == null || charge.Checked == false ? "" : "checked") />
                            </td>
                            <td>@charge.SerName</td>
                            <td>@charge.SerUnit</td>
                            <td>@charge.SerQuantity</td>
                            <td>@charge.SerPrice</td>
                            <td>@charge.Currency</td>
                            <td>@charge.ExchangeRate</td>
                            <td>@charge.SerVat</td>
                            <td>@charge.MVat</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#chargesTable').DataTable({
                "pageLength": 25,
                "order": [[1, "asc"]]
            });

            // Handle check all functionality
            $("#checkAll").change(function () {
                $(".charge-checkbox").prop('checked', $(this).prop('checked'));
                $(".charge-checkbox").each(function() {
                    updateChargeStatus($(this));
                });
            });

            // Handle individual checkbox changes
            $(".charge-checkbox").change(function() {
                updateChargeStatus($(this));
            });
        });

        function updateChargeStatus(checkbox) {
            var chargeId = checkbox.data('charge-id');
            var isChecked = checkbox.prop('checked');

            $.ajax({
                url: '@Url.Action("UpdateChargeStatus")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    chargeId: chargeId,
                    isChecked: isChecked
                }),
                success: function(response) {
                    if (!response.success) {
                        toastr.error(response.message || 'Error updating charge status');
                    }
                },
                error: function() {
                    toastr.error('Error updating charge status');
                }
            });
        }

        function updateInvoice() {
            var formData = $('#invoiceForm').serialize();
            $.ajax({
                url: '@Url.Action("UpdateInvoice")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function() {
                    toastr.error('Error updating invoice');
                }
            });
        }

        function exportInvoice() {
            var selectedCharges = [];
            $(".charge-checkbox:checked").each(function() {
                selectedCharges.push($(this).data('charge-id'));
            });

            if (selectedCharges.length === 0) {
                toastr.warning('Please select at least one charge to export');
                return;
            }

            // TODO: Implement export functionality
            toastr.info('Export functionality will be implemented');
        }
    </script>
} 