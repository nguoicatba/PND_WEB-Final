@model PND_WEB.ViewModels.ContChargeVM

@{
    ViewData["Title"] = "Details";
}

@await Component.InvokeAsync("HblHeader", new { Title = "HBL", SubTitle = "Chi tiáº¿t HBL", Hbl_ID = Model.HBL_Id })

<div class="row">
    <div class="col-xl-12">
        <partial name="_StatusMessage" model="@TempData["status"]" />
        <!-- START card-->
        <div class="card card-default" id="cardDemo14">
            <div class="card-header bg-success">About HBL: @Model.HBL_Id</div>
            <div class="card-body">
                <div role="tabpanel">
                    <!-- Nav tabs-->
                    @await Component.InvokeAsync("HblNavTab", new { HBL_ID = Model.HBL_Id, isLGT = ViewBag.GoodType == "LGT" })
                    <!-- Tab panes-->
                    <div class="tab-content">
                        <p>
                            <a asp-action="Create" asp-route-id="@Model.HBL_Id" class="btn btn-primary btn-xs">New Charge</a>
                        </p>

                        <table class="table nowrap border display table-sm" id="mytable" style="width:100%">
                            <thead class="bg bg-secondary">
                                <tr>
                                    <th>Action</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SupplierId)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SupplierName)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SerName)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SerUnit)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SerQuantity)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SerPrice)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].Currency)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].ExchangeRate)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].SerVat)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].MVat)</th>
                                    <th>@Html.DisplayNameFor(model => model._charges[0].Checked)</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model._charges)
                                {
                                    <tr style="@(item.Checked == true ? "background-color: #d4edda;" : "")">
                                        @if (item.Checked == false || item.Checked == null)
                                        {
                                            <td>
                                                <a asp-action="Edit" asp-route-id="@item.ChargeId" class="btn btn-success btn-xs"><i class="fa fa-edit"></i></a>
                                                <a asp-action="Delete" asp-route-id="@item.ChargeId" class="btn btn-danger btn-xs"><i class="fa fa-trash"></i></a>
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                        <td>@item.SupplierId</td>
                                        <td>@item.SupplierName</td>
                                        <td>@item.SerName</td>
                                        <td>@item.SerUnit</td>
                                        <td>@item.SerQuantity</td>
                                        <td>@item.SerPrice</td>
                                        <td>@item.Currency</td>
                                        <td>@item.ExchangeRate</td>
                                        <td>@item.SerVat</td>
                                        <td>
                                            @if (item.MVat.HasValue)
                                            {
                                                @item.MVat.Value.ToString("N2")
                                            }
                                            else
                                            {
                                                <span class="text-danger">N/A</span>
                                            }
                                        </td>
                                        <td>@item.Checked</td>
                                        <td>@(((item.SerPrice ?? 0) * (item.SerQuantity ?? 0) * (item.ExchangeRate ?? 1) * (1 + (item.SerVat ?? 0) / 100) + (item.MVat ?? 0)).ToString("N2"))</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="12" class="text-right">Total:</td>
                                    <td>@Model._charges.Sum(item => (item.SerPrice ?? 0) * (item.SerQuantity ?? 0) * (item.ExchangeRate ?? 1) * (1 + (item.SerVat ?? 0) / 100) + (item.MVat ?? 0)).ToString("N2")</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("HblProfitFooter", new { hblId = Model.HBL_Id }) 