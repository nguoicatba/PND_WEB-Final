@model PND_WEB.ViewModels.ContainerViewModel

@{
    ViewData["Title"] = "Container";


}

@await Component.InvokeAsync("HblHeader", new { Title = "Container", SubTitle = "Container", Hbl_ID = Model.HBL_ID, Job_ID = Model.JOB_ID })

@await Component.InvokeAsync("Breadcrumb", new List<BreadcrumbItem> {
    new BreadcrumbItem { Title = "Trang chủ", Controller="Home",Action="Index",Parameter="" },
    new BreadcrumbItem { Title = "Danh sách job", Controller="Job",Action="Index",Parameter="" },
    new BreadcrumbItem { Title = "Chi tiết job", Controller="Job",Action="Details",Parameter=Model.JOB_ID },
    new BreadcrumbItem { Title = "Danh sách container", Controller="",Action="",Parameter="" }
})

<div class="row">
    <div class="col-xl-12">
        <div class="card card-default" id="cardDemo14">
            <div class="card-header bg-success">About Container: @Model.HBL_ID</div>
            <div class="card-body">
                <div role="tabpanel">
                    @await Component.InvokeAsync("HblNavTab", new { HBL_ID = Model.HBL_ID, isLGT = ViewBag.GoodType == "LGT" })

                    <div class="tab-content">
                        <partial name="_StatusMessage" model="@TempData["status"]" />
                        <p>
                            @if (User.HasClaim("Container", "Create"))
                            {
                                <a asp-action="Create" asp-route-id=@Model.HBL_ID class="btn btn-labeled btn-primary btn-xs">
                                    <span class="btn-label">
                                        <i class="fa fa-plus-circle"></i>
                                    </span>
                                    New Container
                                </a>
                            }

                        </p>
                        <table class="table nowrap border display" id="mytable" style="width:100%">
                            <thead>
                                <tr>


                                    <th>Action</th>
                                    <th data-priority="1">@Html.DisplayNameFor(model => model.containers[0].ContNo)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].SealNo)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].ContType)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].ContQuantity)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].GrossWeight)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].Cmb)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].GoodsQuantity)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].GoodsKind)</th>
                                    <th>@Html.DisplayNameFor(model => model.containers[0].GoodsDepcription)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.containers)
                                {
                                    <tr>

                                        @if (User.HasClaim("Container", "Edit") || User.HasClaim("Container", "Delete"))
                                        {
                                            <td>
                                                @if (User.HasClaim("Container", "Edit"))
                                                {
                                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success btn-xs"><i class="fa fa-edit"></i></a>
                                                }
                                                @if (User.HasClaim("Container", "Delete"))
                                                {
                                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-xs"><i class="fa fa-trash"></i></a>
                                                }


                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                        <td>@item.ContNo</td>
                                        <td>@item.SealNo</td>
                                        <td>@item.ContType</td>
                                        <td>@item.ContQuantity</td>
                                        <td>@item.GrossWeight</td>
                                        <td>@item.Cmb</td>
                                        <td>@item.GoodsQuantity</td>
                                        <td>@item.GoodsKind</td>
                                        <td>@item.GoodsDepcription</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                               
                                    <td colspan="5">Total:</td>
                                    <td>@Model.totalGrossWeight</td>
                                    <td>@Model.totalCbm</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@await Component.InvokeAsync("HblProfitFooter", new { hblId = Model.HBL_ID })

