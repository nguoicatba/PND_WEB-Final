@{
    ViewData["Title"] = "Home Page";
}
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<TblHscode>



@await Component.InvokeAsync("HeaderBody", new { Title = "Danh sách HSCODE", SubTitle = "" })



<div class="row">
    <div class="col">
        <div class="card card-default">
            <div class="card-header">TÌM KIẾM HSCODE</div>
            <div class="card-body" style="padding:0">
                <form method="get" asp-action="Search" style="padding: 20px">
                    <select name="matchType">
                        <option value="exact">Chính xác</option>
                        <option value="suggest">Gợi ý</option>
                    </select>
                    <input type="text" name="s" placeholder="Nhập từ khóa" required value="@ViewBag.SearchTerm" />
                <button type="submit" class="btn btn-primary btn-xs">Tìm kiếm</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col">
        <div class="card card-default">
            <div class="card-header">BẢNG HSCODE</div>
            <div class="card-body" style="padding:0">
                <table class="table table-bordered table-striped" style="border: 1px solid black">
                    <thead>
                        <tr style="border: 1px solid black">
                            <th style="border: 1px solid black; background-color:#5a8c9b; color:white">  @Html.DisplayNameFor(model => model[0].HsCode)</th>
                            <th style="border: 1px solid black; background-color:#5a8c9b; color:white" ">  @Html.DisplayNameFor(model => model[0].MoTaHangHoaV)</th>
                            <th style="border: 1px solid black; background-color:#5a8c9b; color:white" ">  @Html.DisplayNameFor(model => model[0].MoTaHangHoaE)</th>
                            <th style="border: 1px solid black; background-color:#5a8c9b; color:white" ">  @Html.DisplayNameFor(model => model[0].DonViTinh)</th>
                            <th style="border: 1px solid black; background-color:#5a8c9b; color:white" ">  @Html.DisplayNameFor(model => model[0].ChinhSachHangHoa)</th>
                            <th style="border: 1px solid black; background-color:#5a8c9b; color:white" ">Chi tiết</th>
                        </tr>
                    </thead>
                    <tbody id="data-container">
                        @foreach (var item in Model)
                        {
                            <tr style="color: @(GetTextColor(item.MoTaHangHoaV)); border: 1px solid black">
                                <td style="border: 1px solid black">@item.HsCode</td>
                                <td style="border: 1px solid black">@item.MoTaHangHoaV</td>
                                <td style="border: 1px solid black">@item.MoTaHangHoaE</td>
                                <td style="border: 1px solid black">@item.DonViTinh</td>
                                <td style="border: 1px solid black">@item.ChinhSachHangHoa</td>
                                <td style="border: 1px solid black"><a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-xs" style="color:white">Chi tiết</a></td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Loader -->
                <div id="loading" style="display: none; text-align: center;">
                    <img src="~/images/loader.gif" alt="Loading..." />
                </div>
            </div>
        </div>
    </div>
</div>






<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function getTextColor(text) {
        let count = (text.match(/-/g) || []).length; // Đếm tất cả dấu '-'

        let colors = {
            0: "#002776",
            1: "#0000EE",
            2: "#C00000",
            3: "#588C38",
            4: "#7A34AE",
            5: "#833C0C",
            6: "#A27800"
        };
        return colors[count] || "#000";
    }

    function applyTextColors() {
        $("#data-container tr").each(function () {
            let descriptionCell = $(this).find("td:nth-child(2)"); // Cột MoTaHangHoaV
            let text = descriptionCell.text();
            $(this).css("color", getTextColor(text));
        });
    }

    $(document).ready(function () {
        applyTextColors();

        var page = 2; // Bắt đầu từ trang 2
        var isLoading = false;
        var hasNextPage = true;

        $(window).scroll(function () {
            if (isLoading || !hasNextPage) return;
            if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
                loadMoreData();
            }
        });

        function loadMoreData() {
            isLoading = true;
            $("#loading").show();

            $.ajax({
                url: '@Url.Action("Index", "TblHscode")',
                type: "GET",
                data: { page: page },
                headers: { "X-Requested-With": "XMLHttpRequest" },
                success: function (response) {
                    if (response.data.length > 0) {
                        $.each(response.data, function (index, item) {
                            let row = $(`
                                <tr style="color: ${getTextColor(item.moTaHangHoaV)}; border: 1px solid black">
                                    <td style="border: 1px solid black">${item.hsCode}</td>
                                    <td style="border: 1px solid black">${item.moTaHangHoaV}</td>
                                    <td style="border: 1px solid black">${item.moTaHangHoaE}</td>
                                    <td style="border: 1px solid black">${item.donViTinh}</td>
                                    <td style="border: 1px solid black">${item.chinhSachHangHoa}</td>
                                    <td style="border: 1px solid black"><a href="/TblHscode/Details/${item.id}" class="btn btn-primary btn-xs" style="color:white">Chi tiết</a></td>
                                </tr>
                            `);
                            $("#data-container").append(row);
                        });
                        page++;
                    } else {
                        hasNextPage = false;
                    }
                },
                complete: function () {
                    isLoading = false;
                    $("#loading").hide();
                }
            });
        }
    });
</script>

@functions {
    string GetTextColor(string text)
    {
        if (string.IsNullOrEmpty(text)) return "#000";
        int count = text.Count(c => c == '-'); // Đếm số dấu '-'

        var colors = new Dictionary<int, string>
        {
            { 0, "#002776" },
            { 1, "#0000EE" },
            { 2, "#C00000" },
            { 3, "#588C38" },
            { 4, "#7A34AE" },
            { 5, "#833C0C" },
            { 6, "#A27800" }
        };

        return colors.ContainsKey(count) ? colors[count] : "#000";
    }
}
