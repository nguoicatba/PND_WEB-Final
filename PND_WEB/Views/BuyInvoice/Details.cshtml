@model PND_WEB.ViewModels.InvoiceChargeViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="content-heading">
    <div>
        Chi tiết hóa đơn 
        <small></small>
    </div>
   <div class="ml-auto">
        <button class="btn dropdown-toggle btn-info" type="button" data-toggle="dropdown">Xuất file</button>
        <div class="dropdown-menu" role="menu">
            <a class="dropdown-item" asp-action="DebitNoteExport" asp-route-id="@Model.Invoice.DebitId">Debit Note</a>
            <a class="dropdown-item" href="#">Credit Note</a>
   
          
        </div>
   </div>
</div>


<div class="row">
    <div class="col-xl-12">
        <partial name="_StatusMessage" model="@TempData["status"]" />
        <!-- START card-->
        <div class="card card-default" id="cardDemo14">
            <div class="card-header bg-success">About Buy Invoice: @Model.Invoice.DebitId</div>
            <div class="card-body">

                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.DebitId) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.DebitId)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.SupplierId) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.SupplierId)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.DebitDate) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.DebitDate)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.InvoiceNo) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.InvoiceNo)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.InvoiceDate) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.InvoiceDate)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.InvoiceType) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.InvoiceType)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Invoice.PaymentDate) :
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Invoice.PaymentDate)
                    </dd>

                </dl>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Invoice.DebitId">Edit</a> |
                    <a asp-action="Index" asp-route-id="@Model.HBL_ID">Back to List</a>
                </div>
            </div>


        </div>
        <!-- END card-->
    </div>
</div>


<div class="card card-default" id="cardDemo14">
    <div class="card-header bg-success">Charge List:</div>
    <div class="card-body">

        <p>

            <button id="save" class="btn btn-primary btn-xs">Save data</button>


        </p>



        <table class="table table-striped my-4 w-100 nowrap border" id="kientable">
            <thead class="">
                <tr>
                    <th class="col-1"> <button class="btn btn-success btn-xs" id="add_row"><i class="fa fa-plus-square-o"></i></button></th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].SerName)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].SerUnit)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].SerQuantity)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].SerPrice)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].Currency)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].ExchangeRate)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].SerVat)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].MVat)</th>
                    <th>@Html.DisplayNameFor(model => model._Charges[0].Checked)</th>
                    <th>Amount</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model._Charges)
                {
                    <tr style="@(item.Checked == true ? "background-color: #d4edda;" : "")">

                        @if (item.Checked == false || item.Checked == null){
                            <td>
                                <button class="btn btn-warning btn-xs" id="edit_value"><i class="fa fa-edit"></i></button>

                                <button class="btn btn-danger btn-xs" id="delete_value"><i class="fa fa-trash"></i></button>
                            </td>
                        }
                        else
                        {
                            <td>

                            </td>
                        }

                        <td>@item.SerName</td>
                        <td>@item.SerUnit</td>
                        <td>@item.SerQuantity</td>
                        <td>@item.SerPrice</td>
                        <td>@item.Currency</td>
                        <td>@item.ExchangeRate</td>
                        <td>@item.SerVat</td>
                        <td>@item.MVat</td>
                        <td>@item.Checked</td>
                        <td>@Model.Amount(@item)</td>
                        
                    </tr>
                }
               
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="10" class="text-right">Total:</td>
                    <td>@Model.TotalAmount</td>
                </tr>
            </tfoot>
        </table>


    </div>
</div>
@Html.AntiForgeryToken();


@section Scripts {
   <script>
       

        $(document).ready(function () {
            var table = $('#kientable').DataTable({
              
                "columnDefs": [
                    { "orderable": false, "targets": 0 },
                ],
                "language": {
                    "lengthMenu": "_MENU_",
                    "zeroRecords": "Nothing found - sorry",
                    "info": "Showing page _PAGE_ of _PAGES_",
                    "infoEmpty": "No records available",
                    "infoFiltered": "(filtered from _MAX_ total records)",
                    "search": "_INPUT_",
                    "searchPlaceholder": "Search...",
                    "paginate": {
                        "first":      "<i class='fa fa-angle-double-left'></i>",
                        "last":       "<i class='fa fa-angle-double-right'></i>",
                        "next":       "<i class='fa fa-angle-right'></i>",
                        "previous":   "<i class='fa fa-angle-left'></i>"
                    }
                }
            });

            const url_currency = '@Url.Action("CurrencyGet", "BuyInvoice")';
            const url_fee = '@Url.Action("FeeGet", "BuyInvoice")';
            let header = null;
           
            // get new row
            $('#add_row').on('click', function () {
                var newRow = table.row.add([
                    '<button class="btn btn-primary btn-xs" id="add_value" ><i class="fa fa-check-square-o"></i></button>'+' '+
                    '<button class="btn btn-danger btn-xs" id="close_value" ><i class="fa fa-close"></i></button>',
                    '<select class="form-control select-fee" data-url="' + url_fee + '"></select>',
                    '<input type="text" class="form-control" />',
                    '<input type="text" class="form-control" />',
                    '<input type="text" class="form-control" />',
                    '<select class="form-control select2-currency" data-url="' + url_currency + '"></select>',
                    '<input type="text" class="form-control" />',
                    '<input type="text" class="form-control" />',
                    '<input type="text" class="form-control" />',
                    '',
                    '0'
                ]).draw().node();


                $(newRow).find('.select-fee').select2({
                    ajax: {
                        url: url_fee,
                        dataType: 'json',
                        data: function (params) {
                            return {
                                q: params.term || '',
                                page: params.page
                            };
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            header = data.header;
                            console.log(header);
                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * 10) < data.total_count
                                }
                            };
                        },
                        cache: true
                    },
                    minimumInputLength: 0,
                    templateResult: formatFee,
                    templateSelection: SelectFee,
                   
                    dropdownAutoWidth: true,
                    theme: 'bootstrap4',
                    width: '100%',
                });
                function formatFee(state) {
                    if (!state.id) {
                        return state.text;
                    }
                    if (state.id == '-1') {
                        var $state = $(
                            '<div class="row px-2 py-1" style="background-color:#d1e7dd; color:#0f5132; font-weight:bold; border-radius:4px;">' +
                            '<div class="col-4">' + header.header_code + '</div>' +
                            '<div class="col-4">' + header.header_name + '</div>' +
                            '<div class="col-4">' + header.header_unit + '</div>' +
                            '</div>'
                        );
                        return $state;
                    }
                    var $state = $(
                        '<div class="row px-2 py-1">' +
                        '<div class="col-4">' + state.id + '</div>' +
                        '<div class="col-4">' + state.text + '</div>' +
                        '<div class="col-4">' + state.unit + '</div>' +
                        '</div>'
                    );
                    return $state;
                }
                function SelectFee(state) {
                    if (!state.id) {
                        return state.text;
                    }
                    var $state = $(
                        '<span>' + state.id + '</span>'
                    );
                    return $state;
                }

                $(newRow).find('.select2-currency').select2({
                    ajax: {
                        url: url_currency,
                        dataType: 'json',
                        data: function (params) {
                            return {
                                q: params.term || '',
                                page: params.page
                            };
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            header = data.header;
                            console.log(header);
                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * 10) < data.total_count
                                }
                            };
                        },
                        cache: true
                    },
                    minimumInputLength: 0,
                    templateResult: formatState2,
                    templateSelection: formatState,
                    dropdownAutoWidth: true,
                    theme: 'bootstrap4',
                    width: '100%',
                });
                function formatState2(state) {
                if (!state.id) {
                    return state.text;
                }
                if (state.id == '-1') {

                    var $state = $(
                        '<div class="row px-2 py-1" style="background-color:#d1e7dd; color:#0f5132; font-weight:bold; border-radius:4px;">' +
                        '<div class="col-6">' + header.header_code + '</div>' +
                        '<div class="col-6">' + header.header_name + '</div>' +
                        '</div>'
                    );
                    return $state;
                }
                var $state = $(
                    '<div class="row">' +
                    '<div class="col-6">' + state.id + '</div>' +
                    '<div class="col-6">' + state.text + '</div>' +
                    '</div>'
                );
                return $state;
            }

            function formatState(state) {

                if (!state.id) {
                    return state.text;
                }
                var $state = $(
                    '<span>' + state.id + '</span>'

                );
                return $state;
            }


              
            });

            //close row
            $('#kientable tbody').on('click', '#close_value', function () {
                var row = $(this).closest('tr');
                table.row(row).remove().draw();
            });
            // add new row to table fee
            $('#kientable tbody').on('click', '#add_value', function () {
                var row = $(this).closest('tr');
                
                var name_fee = row.find('td').eq(1).find('select').val();
                var unit = row.find('td').eq(2).find('input').val();
                var quantity = row.find('td').eq(3).find('input').val();
                var price = row.find('td').eq(4).find('input').val();
                var currency = row.find('td').eq(5).find('select').val();
                var exchange_rate = row.find('td').eq(6).find('input').val();
                var vat = row.find('td').eq(7).find('input').val();
                var mvat = row.find('td').eq(8).find('input').val();
                var checked = row.find('td').eq(9).find('input').is(':checked') ? 1 : 0;
                var amount = (price || 0) * (quantity || 0) * (exchange_rate || 1) * (1 + (vat || 0) / 100) + (mvat || 0);
 
                if (name_fee) {
                    table.row(row).data([
                        '<button class="btn btn-warning btn-xs" id="edit_value"><i class="fa fa-edit"></i></button>' + ' '+
                        '<button class="btn btn-danger btn-xs" id="delete_value"><i class="fa fa-trash"></i></button>',
                        name_fee,
                        unit,
                        quantity,
                        price,
                        currency,
                        exchange_rate,
                        vat,
                        mvat,
                        checked,
                        amount
                    ]).draw();
                } else {
                    alert('Đừng để trống fee');
                }
            });
            // delete row
            $('#kientable tbody').on('click', '#delete_value', function () {
                var row = $(this).closest('tr');
                table.row(row).remove().draw();
            });
            // edit row and setting like add row
            $('#kientable tbody').on('click', '#edit_value', function () {
                



                var row = $(this).closest('tr');
                var name_fee = row.find('td').eq(1).text().trim();
                var unit = row.find('td').eq(2).text().trim();
                var quantity = row.find('td').eq(3).text().trim();
                var price = row.find('td').eq(4).text().trim();
                var currency = row.find('td').eq(5).text().trim();
                var exchange_rate = row.find('td').eq(6).text().trim();
                var vat = row.find('td').eq(7).text().trim();
                var mvat = row.find('td').eq(8).text().trim();
                var checked = row.find('td').eq(9).text().trim();
                // select fee with option selected name_fee in eq(1)

                
                row.find('td').eq(1).html(
                    '<select class="form-control select-fee" data-url="' + url_fee + '">'+
                    '<option value="'+name_fee+'" selected="selected">'+name_fee+'</option>' +
                    '</select>');
                row.find('td').eq(2).html('<input type="text" class="form-control" value="' + unit + '">');
                row.find('td').eq(3).html('<input type="text" class="form-control" value="' + quantity + '">');
                row.find('td').eq(4).html('<input type="text" class="form-control" value="' + price + '">');
                row.find('td').eq(5).html(
                    '<select class="form-control select2-currency" data-url="' + url_currency + '">'+
                    '<option value="'+currency+'" selected="selected">'+currency+'</option>' +
                    '</select>');
              
                row.find('td').eq(6).html('<input type="text" class="form-control" value="' + exchange_rate + '">');
                row.find('td').eq(7).html('<input type="text" class="form-control" value="' + vat + '">');
                row.find('td').eq(8).html('<input type="text" class="form-control" value="' + mvat + '">');
                row.find('td').eq(9).html('');
                // set fee
                $(row).find('.select-fee').select2({
                    ajax: {
                        url: url_fee,
                        dataType: 'json',
                        data: function (params) {
                            return {
                                q: params.term || '',
                                page: params.page
                            };
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            header = data.header;
                            console.log(header);
                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * 10) < data.total_count
                                }
                            };
                        },
                        cache: true
                        },
                        minimumInputLength: 0,
                        templateResult: formatFee,
                        templateSelection: SelectFee,
                        dropdownAutoWidth: true,
                        theme: 'bootstrap4',
                        width: '100%',
                        });
                  function formatFee(state) {
                            if (!state.id) {
                                return state.text;
                            }
                            if (state.id == '-1') {
                                var $state = $(
                                    '<div class="row px-2 py-1" style="background-color:#d1e7dd; color:#0f5132; font-weight:bold; border-radius:4px;">' +
                                    '<div class="col-4">' + header.header_code + '</div>' +
                                    '<div class="col-4">' + header.header_name + '</div>' +
                                    '<div class="col-4">' + header.header_unit + '</div>' +
                                    '</div>'
                                );
                                return $state;
                            }
                            var $state = $(
                                '<div class="row px-2 py-1">' +
                                '<div class="col-4">' + state.id + '</div>' +
                                '<div class="col-4">' + state.text + '</div>' +
                                '<div class="col-4">' + state.unit + '</div>' +
                                '</div>'
                            );
                            return $state;
                        }
                        function SelectFee(state) {
                            if (!state.id) {
                                return state.text;
                            }
                            var $state = $(
                                '<span>' + state.id + '</span>'
                            );
                            return $state;
                        }
                        // set currency
                        $(row).find('.select2-currency').select2({
                            ajax: {
                                url: url_currency,
                                dataType: 'json',
                                data: function (params) {
                                    return {
                                        q: params.term || '',
                                        page: params.page
                                    };
                                },
                                processResults: function (data, params) {
                                    params.page = params.page || 1;
                                    header = data.header;
                                    console.log(header);
                                    return {
                                        results: data.items,
                                        pagination: {
                                            more: (params.page * 10) < data.total_count
                                        }
                                    };
                                },
                                cache: true
                            },
                            minimumInputLength: 0,
                            templateResult: formatState2,
                            templateSelection: formatState,
                            dropdownAutoWidth: true,
                            theme: 'bootstrap4',
                            width: '100%',
                        });
                        function formatState2(state) {
                            if (!state.id) {
                                return state.text;
                            }
                            if (state.id == '-1') {
                                var $state = $(
                                    '<div class="row px-2 py-1" style="background-color:#d1e7dd; color:#0f5132; font-weight:bold; border-radius:4px;">' +
                                    '<div class="col-6">' + header.header_code + '</div>' +
                                    '<div class="col-6">' + header.header_name + '</div>' +
                                    '</div>'
                                );
                                return $state;
                            }
                            var $state = $(
                                '<div class="row">' +
                                '<div class="col-6">' + state.id + '</div>' +
                                '<div class="col-6">' + state.text + '</div>' +
                                '</div>'
                            );
                            return $state;
                        }
                        function formatState(state) {
                            if (!state.id) {
                                return state.text;
                            }
                            var $state = $(
                                '<span>' + state.id + '</span>'
                            );
                            return $state;
                        }

                // show option selected in select
              
                $(row).find('.select-fee').val(name_fee).trigger('change');
                $(row).find('.select2-currency').val(currency).trigger('change');
                

                row.find('td').eq(0).html('<button class="btn btn-primary btn-xs" id="save_value_edit"><i class="fa fa-check-square-o"></i></button>'
                );
                            
            });
            // save edit
            $('#kientable tbody').on('click', '#save_value_edit', function () {
                var row = $(this).closest('tr');
                var name_fee = row.find('td').eq(1).find('select').val();
                var unit = row.find('td').eq(2).find('input').val();
                var quantity = row.find('td').eq(3).find('input').val();
                var price = row.find('td').eq(4).find('input').val();
                var currency = row.find('td').eq(5).find('select').val();
                var exchange_rate = row.find('td').eq(6).find('input').val();
                var vat = row.find('td').eq(7).find('input').val();
                var mvat = row.find('td').eq(8).find('input').val();
                var checked = row.find('td').eq(9).find('input').is(':checked') ? 1 : 0;
                var amount = (price || 0) * (quantity || 0) * (exchange_rate || 1) * (1 + (vat || 0) / 100) + (mvat || 0);

                if (name_fee) {
                    table.row(row).data([
                        '<button class="btn btn-warning btn-xs" id="edit_value"><i class="fa fa-edit"></i></button>' + ' '+
                        '<button class="btn btn-danger btn-xs" id="delete_value"><i class="fa fa-trash"></i></button>',
                        name_fee,
                        unit,
                        quantity,
                        price,
                        currency,
                        exchange_rate,
                        vat,
                        mvat,
                        checked,
                        amount
                    ]).draw();
                } else {
                    alert('Đừng để trống fee');
                }
            });


            // save data
            $('#save').on('click', function () {

                var tableData=table.rows().data().toArray();
                console.log(tableData);
                var dataToSend = tableData.map(function (row) {
                    return {
                        DebitId: '@Model.Invoice.DebitId',
                        SerName: row[1],
                        SerUnit: row[2],
                        SerQuantity: parseFloat(row[3]),
                        SerPrice: parseFloat(row[4]),
                        Currency: row[5],
                        ExchangeRate: parseFloat(row[6]),
                        SerVat: parseFloat(row[7]),
                        MVat: parseFloat(row[8]),
                        Checked: row[9] =='True'? true: false
                      
                    };
                });
                console.log(dataToSend);
                // ajax with token
                       $.ajax({
            type: "POST",
            url: '@Url.Action("SaveData", "BuyInvoice")',
            data: JSON.stringify(dataToSend),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {
                if (response.success) {
                    alert('Data saved successfully!');
                    location.reload();
                } else {
                    alert('Error saving data: ' + response.message);
                }
            },
            error: function (xhr, status, error) {
                alert('Error saving data: ' + error);
            }
        });

               
            });


        });
      


        
   </script>
}