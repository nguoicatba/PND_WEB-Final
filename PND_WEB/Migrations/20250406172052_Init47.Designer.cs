// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PND_WEB.Repository;

#nullable disable

namespace PND_WEB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250406172052_Init47")]
    partial class Init47
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PND_WEB.Models.Agent", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgentAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentNamekd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("PND_WEB.Models.AgentAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeNavigationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonInCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodeNavigationCode");

                    b.ToTable("AgentActions");
                });

            modelBuilder.Entity("PND_WEB.Models.AppUserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PND_WEB.Models.BlType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BlName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("BlTypes");
                });

            modelBuilder.Entity("PND_WEB.Models.Carrier", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarierAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierNamekd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("PND_WEB.Models.CarrierAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeNavigationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LccFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonInCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodeNavigationCode");

                    b.ToTable("CarrierActions");
                });

            modelBuilder.Entity("PND_WEB.Models.Cport", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CODE");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PORT_NAME");

                    b.HasKey("Code");

                    b.ToTable("CPORT");
                });

            modelBuilder.Entity("PND_WEB.Models.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CODE");

                    b.Property<string>("CurrName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Curr_name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Note");

                    b.HasKey("Code");

                    b.ToTable("CURRENCY");
                });

            modelBuilder.Entity("PND_WEB.Models.Fee", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Fee1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FEE");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOTE");

                    b.Property<string>("Unit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UNIT");

                    b.HasKey("Code");

                    b.ToTable("FEE");
                });

            modelBuilder.Entity("PND_WEB.Models.GoodsType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("GoodsTypes");
                });

            modelBuilder.Entity("PND_WEB.Models.InvoiceType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("InvoiceTypes");
                });

            modelBuilder.Entity("PND_WEB.Models.Kindofpackage", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CODE");

                    b.Property<string>("PackageName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Package_name");

                    b.Property<string>("PackagesDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Packages_description");

                    b.HasKey("Code");

                    b.ToTable("KINDOFPACKAGES");
                });

            modelBuilder.Entity("PND_WEB.Models.Mode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CODE");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Note");

                    b.HasKey("Code");

                    b.ToTable("MODE");
                });

            modelBuilder.Entity("PND_WEB.Models.Quotation", b =>
                {
                    b.Property<string>("QuotationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CusContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CusTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Qdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Qsatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Term")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Valid")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuotationId");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("PND_WEB.Models.QuotationsCharge", b =>
                {
                    b.Property<int>("ChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChargeId"));

                    b.Property<string>("ChargeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("QuotationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChargeId");

                    b.HasIndex("QuotationId");

                    b.ToTable("QuotationsCharges");
                });

            modelBuilder.Entity("PND_WEB.Models.Sourse", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Sourses");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Buy")
                        .HasColumnType("bit");

                    b.Property<bool?>("Checked")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cont")
                        .HasColumnType("bit");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<float?>("MVat")
                        .HasColumnType("real");

                    b.Property<bool?>("Sell")
                        .HasColumnType("bit");

                    b.Property<string>("SerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SerPrice")
                        .HasColumnType("real");

                    b.Property<float?>("SerQuantity")
                        .HasColumnType("real");

                    b.Property<string>("SerUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SerVat")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DebitId");

                    b.ToTable("TblCharges");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCnee", b =>
                {
                    b.Property<string>("Cnee")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Caddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ccity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpersonInCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vaddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vcnee")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cnee");

                    b.ToTable("TblCnees");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCneeAdd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CneeNavigationCnee")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonInCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CneeNavigationCnee");

                    b.ToTable("TblCneeAdds");
                });

            modelBuilder.Entity("PND_WEB.Models.TblConth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cmb")
                        .HasColumnType("float");

                    b.Property<string>("ContNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ContType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodsDepcription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodsQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("Hbl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HblNavigationHbl")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SealNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HblNavigationHbl");

                    b.ToTable("TblConths");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCustomer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ComAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ComAddresskd")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyNamekd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DutyPerson")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CustomerId");

                    b.ToTable("tbl_CUSTOMER");
                });

            modelBuilder.Entity("PND_WEB.Models.TblHbl", b =>
                {
                    b.Property<string>("Hbl")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BlType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CneeNavigationCnee")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Collect")
                        .HasColumnType("bit");

                    b.Property<string>("ContSealNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomsDeclarationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("FreightCharge")
                        .HasColumnType("bit");

                    b.Property<string>("FreightPayable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodsDesciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssueDateH")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuePlaceH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkNos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyParty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberofOrigins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnBoardDateH")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Prepaid")
                        .HasColumnType("bit");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperNavigationShipper")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SiNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Tonnage")
                        .HasColumnType("float");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Hbl");

                    b.HasIndex("CneeNavigationCnee");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RequestId");

                    b.HasIndex("ShipperNavigationShipper");

                    b.ToTable("TblHbls");
                });

            modelBuilder.Entity("PND_WEB.Models.TblHscode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Aanzfta")
                        .HasColumnType("float");

                    b.Property<double?>("Acfta")
                        .HasColumnType("float");

                    b.Property<double?>("Ahkfta")
                        .HasColumnType("float");

                    b.Property<double?>("Aifta")
                        .HasColumnType("float");

                    b.Property<double?>("Ajcep")
                        .HasColumnType("float");

                    b.Property<double?>("Akfta")
                        .HasColumnType("float");

                    b.Property<double?>("Atiga")
                        .HasColumnType("float");

                    b.Property<string>("ChiTietGiamVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChinhSachHangHoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cptpp")
                        .HasColumnType("float");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Evfta")
                        .HasColumnType("float");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChuKhongDau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiamVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoTaHangHoaE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaHangHoaV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaKhongDau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RceptA")
                        .HasColumnType("float");

                    b.Property<double?>("RceptB")
                        .HasColumnType("float");

                    b.Property<double?>("RceptC")
                        .HasColumnType("float");

                    b.Property<double?>("RceptD")
                        .HasColumnType("float");

                    b.Property<double?>("RceptE")
                        .HasColumnType("float");

                    b.Property<double?>("RceptF")
                        .HasColumnType("float");

                    b.Property<string>("ThueBvmt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ThueNkTt")
                        .HasColumnType("float");

                    b.Property<double?>("ThueNkUd")
                        .HasColumnType("float");

                    b.Property<string>("ThueVat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Ttdb")
                        .HasColumnType("float");

                    b.Property<double?>("Ukvfta")
                        .HasColumnType("float");

                    b.Property<double?>("Vcfta")
                        .HasColumnType("float");

                    b.Property<double?>("Vjepa")
                        .HasColumnType("float");

                    b.Property<double?>("Vkfta")
                        .HasColumnType("float");

                    b.Property<double?>("VnEaeu")
                        .HasColumnType("float");

                    b.Property<double?>("VnLao")
                        .HasColumnType("float");

                    b.Property<double?>("Vncu")
                        .HasColumnType("float");

                    b.Property<double?>("Xk")
                        .HasColumnType("float");

                    b.Property<double?>("Xkcptpp")
                        .HasColumnType("float");

                    b.Property<double?>("Xkev")
                        .HasColumnType("float");

                    b.Property<double?>("Xkukv")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TblHscodes");
                });

            modelBuilder.Entity("PND_WEB.Models.TblInvoice", b =>
                {
                    b.Property<string>("DebitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DebitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hbl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HblNavigationHbl")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DebitId");

                    b.HasIndex("HblNavigationHbl");

                    b.HasIndex("SupplierId");

                    b.ToTable("TblInvoices");
                });

            modelBuilder.Entity("PND_WEB.Models.TblJob", b =>
                {
                    b.Property<string>("JobId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentNavigationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierNavigationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Eta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Etd")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoodsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssueDateM")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mbl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnBoardDateM")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlaceofDelivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceofReceipt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Podel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Podis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreCariageBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UseTime")
                        .HasColumnType("int");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoyageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ycompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YunLock")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("AgentNavigationCode");

                    b.HasIndex("CarrierNavigationCode");

                    b.ToTable("TblJobs");
                });

            modelBuilder.Entity("PND_WEB.Models.TblShipper", b =>
                {
                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Saddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpersonInCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Shipper");

                    b.ToTable("TblShippers");
                });

            modelBuilder.Entity("PND_WEB.Models.TblSupplier", b =>
                {
                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressSup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LccFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("TblSuppliers");
                });

            modelBuilder.Entity("PND_WEB.Models.TblSupplierAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonInCharge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("TblSupplierActions");
                });

            modelBuilder.Entity("PND_WEB.Models.TblTutt", b =>
                {
                    b.Property<string>("SoTutt")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Ceo")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Ketoan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Ngay")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanvienTutt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("xacnhanduyet")
                        .HasColumnType("bit");

                    b.HasKey("SoTutt");

                    b.ToTable("TblTutts");
                });

            modelBuilder.Entity("PND_WEB.Models.TblTuttPhi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NghiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<string>("SoTutt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTuttNavigationSoTutt")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenPhi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Tt")
                        .HasColumnType("bit");

                    b.Property<bool?>("Tu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SoTuttNavigationSoTutt");

                    b.ToTable("TblTuttsPhi");
                });

            modelBuilder.Entity("PND_WEB.Models.Unit", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CODE");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Note");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Unit_name");

                    b.HasKey("Code");

                    b.ToTable("UNIT");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PND_WEB.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PND_WEB.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PND_WEB.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PND_WEB.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PND_WEB.Models.AgentAction", b =>
                {
                    b.HasOne("PND_WEB.Models.Agent", "CodeNavigation")
                        .WithMany("AgentActions")
                        .HasForeignKey("CodeNavigationCode");

                    b.Navigation("CodeNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.CarrierAction", b =>
                {
                    b.HasOne("PND_WEB.Models.Carrier", "CodeNavigation")
                        .WithMany("CarrierActions")
                        .HasForeignKey("CodeNavigationCode");

                    b.Navigation("CodeNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.QuotationsCharge", b =>
                {
                    b.HasOne("PND_WEB.Models.Quotation", "Quotation")
                        .WithMany("QuotationsCharges")
                        .HasForeignKey("QuotationId");

                    b.Navigation("Quotation");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCharge", b =>
                {
                    b.HasOne("PND_WEB.Models.TblInvoice", "Debit")
                        .WithMany("TblCharges")
                        .HasForeignKey("DebitId");

                    b.Navigation("Debit");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCneeAdd", b =>
                {
                    b.HasOne("PND_WEB.Models.TblCnee", "CneeNavigation")
                        .WithMany("TblCneeAdds")
                        .HasForeignKey("CneeNavigationCnee");

                    b.Navigation("CneeNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.TblConth", b =>
                {
                    b.HasOne("PND_WEB.Models.TblHbl", "HblNavigation")
                        .WithMany("TblConths")
                        .HasForeignKey("HblNavigationHbl");

                    b.Navigation("HblNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.TblHbl", b =>
                {
                    b.HasOne("PND_WEB.Models.TblCnee", "CneeNavigation")
                        .WithMany("TblHbls")
                        .HasForeignKey("CneeNavigationCnee");

                    b.HasOne("PND_WEB.Models.TblCustomer", "Customer")
                        .WithMany("TblHbls")
                        .HasForeignKey("CustomerId");

                    b.HasOne("PND_WEB.Models.TblJob", "Request")
                        .WithMany("TblHbls")
                        .HasForeignKey("RequestId");

                    b.HasOne("PND_WEB.Models.TblShipper", "ShipperNavigation")
                        .WithMany("TblHbls")
                        .HasForeignKey("ShipperNavigationShipper");

                    b.Navigation("CneeNavigation");

                    b.Navigation("Customer");

                    b.Navigation("Request");

                    b.Navigation("ShipperNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.TblInvoice", b =>
                {
                    b.HasOne("PND_WEB.Models.TblHbl", "HblNavigation")
                        .WithMany("TblInvoices")
                        .HasForeignKey("HblNavigationHbl");

                    b.HasOne("PND_WEB.Models.TblSupplier", "Supplier")
                        .WithMany("TblInvoices")
                        .HasForeignKey("SupplierId");

                    b.Navigation("HblNavigation");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PND_WEB.Models.TblJob", b =>
                {
                    b.HasOne("PND_WEB.Models.Agent", "AgentNavigation")
                        .WithMany("TblJobs")
                        .HasForeignKey("AgentNavigationCode");

                    b.HasOne("PND_WEB.Models.Carrier", "CarrierNavigation")
                        .WithMany("TblJobs")
                        .HasForeignKey("CarrierNavigationCode");

                    b.Navigation("AgentNavigation");

                    b.Navigation("CarrierNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.TblSupplierAction", b =>
                {
                    b.HasOne("PND_WEB.Models.TblSupplier", "Supplier")
                        .WithMany("TblSupplierActions")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PND_WEB.Models.TblTuttPhi", b =>
                {
                    b.HasOne("PND_WEB.Models.TblTutt", "SoTuttNavigation")
                        .WithMany("TblTuttPhis")
                        .HasForeignKey("SoTuttNavigationSoTutt");

                    b.Navigation("SoTuttNavigation");
                });

            modelBuilder.Entity("PND_WEB.Models.Agent", b =>
                {
                    b.Navigation("AgentActions");

                    b.Navigation("TblJobs");
                });

            modelBuilder.Entity("PND_WEB.Models.Carrier", b =>
                {
                    b.Navigation("CarrierActions");

                    b.Navigation("TblJobs");
                });

            modelBuilder.Entity("PND_WEB.Models.Quotation", b =>
                {
                    b.Navigation("QuotationsCharges");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCnee", b =>
                {
                    b.Navigation("TblCneeAdds");

                    b.Navigation("TblHbls");
                });

            modelBuilder.Entity("PND_WEB.Models.TblCustomer", b =>
                {
                    b.Navigation("TblHbls");
                });

            modelBuilder.Entity("PND_WEB.Models.TblHbl", b =>
                {
                    b.Navigation("TblConths");

                    b.Navigation("TblInvoices");
                });

            modelBuilder.Entity("PND_WEB.Models.TblInvoice", b =>
                {
                    b.Navigation("TblCharges");
                });

            modelBuilder.Entity("PND_WEB.Models.TblJob", b =>
                {
                    b.Navigation("TblHbls");
                });

            modelBuilder.Entity("PND_WEB.Models.TblShipper", b =>
                {
                    b.Navigation("TblHbls");
                });

            modelBuilder.Entity("PND_WEB.Models.TblSupplier", b =>
                {
                    b.Navigation("TblInvoices");

                    b.Navigation("TblSupplierActions");
                });

            modelBuilder.Entity("PND_WEB.Models.TblTutt", b =>
                {
                    b.Navigation("TblTuttPhis");
                });
#pragma warning restore 612, 618
        }
    }
}
